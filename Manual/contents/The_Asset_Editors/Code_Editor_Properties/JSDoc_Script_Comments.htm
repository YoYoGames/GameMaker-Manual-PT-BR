<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Comentários sobre o JSDoc Script</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how JSDoc Script Comments work" />
  <meta name="rh-index-keywords" content="Code Editor - JSDoc Comments,JSDoc" />
  <meta name="search-keywords" content="JSDoc,JSDoc Comments" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>JSDoc <span class="notranslate">Script</span> Comentários</h1>
  <p>Se você deseja que suas funções personalizadas tenham conclusão de código e mostrar os argumentos necessários de uma maneira específica no editor de código, então você precisa adicionar alguns comentários <a href="https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html">em estilo JSDoc</a>. Estes comentários são usados para dizer ao recurso de auto-completar como a função deve ser usada e preenchida no <a href="../Scripts.htm">editor de scripts</a>.</p>
  <p>O formato para um cabeçalho de função típico seria ter o nome da função, a descrição da função e, em seguida, a lista dos diferentes argumentos (parâmetros) que a função leva, certificando-se de iniciar cada linha com uma barra invertida tripla &quot;<span class="inline">///</span>&quot;, pois isso diz ao <span data-keyref="GameMaker Name">GameMaker</span> para analisar o comentário como sendo estilo JSDoc. Você pode, alternativamente, embrulhar seus comentários JSDoc em <span class="inline">/**</span>... <span class="inline">*/</span>... com o <span class="inline">/**</span> em sua própria linha.</p>
  <p>Os próprios comentários precisam receber um identificador (precedido por &quot;<span class="inline">@</span>&quot;) e conteúdo, e os identificadores disponíveis são os seguintes:</p>
  <table>
    <colgroup>
      <col style="width: 306px;" />
      <col style="width: 488px;" />
      <col style="width: 487px;" />
    </colgroup>
    <tbody>
      <tr>
        <th>Identificador</th>
        <th>Conteúdo</th>
        <th>Sintaxe</th>
      </tr>
      <tr>
        <td><span class="inline">@function</span> / <span class="inline">@func</span></td>
        <td>O nome completo da função incluindo os argumentos</td>
        <td><span class="inline">@func my_func(args)</span></td>
      </tr>
      <tr>
        <td><span class="inline">@description</span> / <span class="inline">@desc</span></td>
        <td>Uma descrição geral do que a função faz</td>
        <td><span class="inline">@desc &lt;Description goes&gt;</span></td>
      </tr>
      <tr>
        <td><span class="inline">@param</span> / <span class="inline">@</span><span class="inline">parameter</span> / <span class="inline">@arg</span> / <span class="inline">@argument</span></td>
        <td>Informações sobre argumentos, com um opcional <a href="Feather_Data_Types.htm"><span class="notranslate">type</span></a></td>
        <td><span class="inline">@param <em>{type}</em> name &lt;Parameter description&gt;</span></td>
      </tr>
      <tr>
        <td><span class="inline">@return / @returns</span></td>
        <td><a href="Feather_Data_Types.htm">Tipo</a> de dados que a função retorna</td>
        <td><span class="inline">@return {type} &lt;Return description&gt;</span></td>
      </tr>
      <tr>
        <th colspan="3">Apenas<a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">penas</a> </th>
      </tr>
      <tr>
        <td><span class="inline">@url</span></td>
        <td>URL for the function, opens when you press <span class="shortcut">F1</span> on the function name or use the <strong>RMB -&gt; Go To Declaration</strong> option.</td>
        <td><span class="inline">@url https://...</span></td>
      </tr>
      <tr>
        <td><span class="inline">@pure</span></td>
        <td>Marca a função como <a class="glossterm" data-glossterm="puro" href="#">pura</a></td>
        <td><span class="inline">@pure</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@ignore</span></td>
        <td style="">Oculta a função do autocompletar do Feather</td>
        <td><span class="inline">@ignore</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@deprecated</span></td>
        <td style="">Marca a função como depreciada</td>
        <td><span class="inline">@deprecated</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@context / @self</span></td>
        <td style="">Define o contexto para a função, que Feather auto-complete usa para fornecer informações contextuais. Pode ser um <span class="notranslate">object</span> ou um construtor.</td>
        <td><span class="inline">@self &lt;object&gt;</span></td>
      </tr>
      <tr>
        <th colspan="3" style=""><span data-keyref="Code_Editor1_Name">Legacy Code Editor</span> only</th>
      </tr>
      <tr>
        <td><span class="inline">@function</span> / <span class="inline">@func</span></td>
        <td>The full function name including arguments</td>
        <td><span class="inline">@func my_func(args)</span></td>
      </tr>
    </tbody>
  </table>
  <p>Se você não tiver especificado um tipo para seus argumentos ou valor de retorno, e estiver usando <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Feather</a>, ele assumirá automaticamente um tipo de dados para eles, com base em seu corpo funcional.</p>
  <p>Veja informações sobre tipos de dados em <span class="inline">@param</span> e <span class="inline">@return</span> em <a href="Feather_Data_Types.htm">Feather Data Types</a>.</p>
  <h2>Exemplos</h2>
  <p>Para ter uma idéia de como isto funcionaria ao escrever suas próprias funções, vamos tomar este exemplo básico:</p>
  <p class="code">function is_same_object(_id, _obj)<br />
    {<br />
        if (_id.object_index == _obj)<br />
        {<br />
            return true;<br />
        }<br />
        else return false;<br />
    }</p>
  <p>Tudo o que <span class="notranslate">script</span> faz é verificar se uma instância tem o mesmo <span class="inline">object_index</span> que um dado <span class="notranslate">object</span> e seria chamada simplesmente como tal:</p>
  <p class="code">if is_same_object(id, obj_Player)<br />
    {<br />
        instance_destroy()<br />
    }</p>
  <p>No entanto, escrevendo isso no editor de código, você verá diretamente os nomes das variáveis de argumento (<span class="inline">_id</span> e <span class="inline">_obj</span>), o que na maioria dos casos não é muito descritivo. Você pode usar o JSDoc para definir nomes e descrições de argumentos personalizados, juntamente com informações também para a função:</p>
  <p class="code">/// @function                is_same_object(inst_id, object_id)<br />
    /// @description             Check if the given instance belongs to the given object.<br />
    /// @param {Id.Instance}     inst_id    The unique instance ID value of the instance to check.<br />
    /// @param {Asset.GMObject}  object_id  The object index to be checked against.<br />
    /// @return {Bool}<br />
    <br />
    function is_same_object(_inst_id, _object_id)<br />
    {<br />
        return _inst_id.object_index == _object_id;<br />
    }
  </p>
  <p>Agora, ao chamar esta função em qualquer lugar em seu projeto, você verá os novos nomes dos argumentos que foram inseridos nos comentários do JSDoc:</p>
  <p><img>Na imagem acima, a parte superior mostra a função no auto-completar e a parte inferior mostra como funciona o auxiliar de argumento na parte inferior. Observe que tanto a parte opcional &quot;tipo&quot; quanto a parte obrigatória &quot;descrição&quot; de <span class="inline">@param</span> não são exibidas por padrão no código <span class="notranslate">IDE</span> completo, e para vê-las você deve ativar as opções nas <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/GML_Code_Preferences.htm">Preferências do GML</a>.</p>
  <p>Ao usar <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Feather</a>, você verá informações detalhadas sobre a função quando passar o mouse sobre ela:</p>
  <p><img>Você pode embrulhar um nome de argumento entre colchetes em <span class="inline">[]</span> para indicar que é opcional. O editor de código esperará então qualquer número de argumentos entre o mínimo exigido de argumentos e o número total de argumentos.</p>
  <p>Por exemplo, veja a seguinte função:</p>
  <p class="code">/// @function    animate_position(end_x, end_y, start_x, start_y)<br />
    /// @desc        Animates the instance to ending point, from optional starting point<br />
    /// @arg end_x<br />
    /// @arg end_y<br />
    /// @arg [start_x]<br />
    /// @arg [start_y]<br />
    <br />
    function animate_position (x1, y1, x2, y2)<br />
    {<br />
        // Function code<br />
    }
  </p>
  <p>Os argumentos <span class="inline">start_x</span> e <span class="inline">start_y</span> estão marcados como opcionais, o que significa que o editor de código esperará agora 2 a 4 argumentos, como pode ser visto na mensagem de aviso:</p>
  <p><img alt="JSDoc Example" class="center" height="652" src="../../assets/Images/Scripting_Reference/Additional_Information/JavaDoc_Example.png" width="672" /></p>
  <p class="note"><span class="note">OBSERVAÇÃO</span> Você terá o mesmo comportamento se usar argumentos opcionais na declaração de função. Veja as <a href="../../GameMaker_Language/GML_Overview/Script_Functions.htm">funções do script</a> para mais informações.</p>
  <p>Como <span class="notranslate">scripts</span> pode ter múltiplas funções nelas, você pode adicionar comentários JSDoc para cada uma delas antes de sua declaração:</p>
  <p><img class="center" src="../../assets/Images/Asset_Editors/JSDoc_Feather_Info.png" /></p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Scripts.htm">O Editor <span class="notranslate">Script</span> </a></div>
        <div style="float:right">A seguir: <a data-xref="{title}" href="Feather_Data_Types.htm">Tipos de dados de pluma</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
JSDoc <span class="notranslate">Script</span> Comments
-->
  <!-- TAGS
jsdoc_comments
-->
</body>
</html>