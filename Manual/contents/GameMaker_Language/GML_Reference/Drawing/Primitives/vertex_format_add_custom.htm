<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vértice_formato_add_custom</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_format_add_custom" />
  <meta name="rh-index-keywords" content="vertex_format_add_custom,vertex_type_float1,vertex_type_float2,vertex_type_float3,vertex_type_float4,vertex_type_colour,vertex_type_ubyte4,vertex_usage_position,vertex_usage_colour,vertex_usage_normal,vertex_usage_blendweight,vertex_usage_blendindices,vertex_usage_depth,vertex_usage_tangent,vertex_usage_binormal,vertex_usage_fog,vertex_usage_sample,vertex_usage_texcoord" />
  <meta name="search-keywords" content="vertex_format_add_custom,vertex_type_float1,vertex_type_float2,vertex_type_float3,vertex_type_float4,vertex_type_colour,vertex_type_ubyte4,vertex_usage_position,vertex_usage_colour,vertex_usage_normal,vertex_usage_blendweight,vertex_usage_blendindices,vertex_usage_depth,vertex_usage_tangent,vertex_usage_binormal,vertex_usage_fog,vertex_usage_sample,vertex_usage_texcoord" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vértice_formato_add_custom</h1>
  <p>Esta função permite que você utilize um tipo de dados personalizado para atributos específicos do formato <span class="notranslate">vertex</span> como parte do novo formato <span class="notranslate">vertex</span> que está sendo criado. Os valores disponíveis para uso são definidos pelo tipo de constante de dados que você escolher, listados abaixo:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Draw_Vertex_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Tipo de dados de vértices Constante</a></span></th>
      </tr>
      <tr>
        <th>Constante</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float1</span></td>
        <td>Um único valor de ponto flutuante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float2</span></td>
        <td>Dois valores de ponto flutuante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float3</span></td>
        <td>Três valores de ponto flutuante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float4</span></td>
        <td>Quatro valores de ponto flutuante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_colour</span></td>
        <td>Quatro valores componentes (r, g, b, a)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_ubyte4</span></td>
        <td>Quatro valores de bytes não assinados (de 0 a 255)</td>
      </tr>
    </tbody>
  </table>
  <p><br>
    O uso que estas constantes serão colocadas também precisa ser definido para que os valores possam ser &quot;vinculados&quot; adequadamente dentro do <span class="notranslate">shader</span> que está sendo criado. Isto é necessário devido ao fato de que DX e OpenGL têm requisitos diferentes, portanto, se você não os vincula apropriadamente, eles não serão aprovados no <span class="notranslate">shader</span>. As constantes de uso disponíveis que você pode escolher estão listadas abaixo e aquelas que você usa dependerão das especificidades do <span class="notranslate">shader</span> que está sendo criado:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Draw_Vertex_Usage"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Constante do tipo de uso do vértice</a></span></th>
      </tr>
      <tr>
        <th>Constante</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_position</span></td>
        <td>valores de posição (x, y, z)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_colour</span></td>
        <td>valores de cor (r, g, b, a)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_normal</span></td>
        <td>valores normais do vértice (nx, ny, nz)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_textcoord</span></td>
        <td>Coordenadas UV (u, v)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_blendweight</span></td>
        <td>o peso de mistura da matriz de entrada (para animação do esqueleto, por exemplo)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_blendindices</span></td>
        <td>os índices das matrizes a utilizar (para animação esquelética, por exemplo)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_depth</span></td>
        <td>profundidade do vértice <span class="notranslate">buffer</span> valor</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_tangent</span></td>
        <td>valores tangentes</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_binormal</span></td>
        <td>valores binormais</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_fog</span></td>
        <td>valores de nevoeiro</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_sample</span></td>
        <td>índice de amostragem</td>
      </tr>
      <tr>
        <td><span class="inline">vertex_usage_psize</span></td>
        <td>point size for point sprites</td>
      </tr>
    </tbody>
  </table>
  <p><br>
    Há algumas coisas importantes a serem observadas quando se utiliza formatos personalizados como estes:</p>
  <ul class="colour">
    <li>A função <span class="inline">vertex_format_add_custom()</span> suporta apenas <span class="inline">vertex_usage_position</span>, <span class="inline">vertex_usage_colour</span>, <span class="inline">vertex_usage_normal</span> e <span class="inline">vertex_usage_textcoord</span> quando se utiliza GLSL <span class="notranslate">shaders</span>. Estes mapearão para os atributos <span class="notranslate">shader</span> <span class="inline">in_Position</span> , <span class="inline">in_Colour[0 - ...]</span>, <span class="inline">in_Normal</span> respectivamente (qualquer coisa que não seja um destes três atributos - por exemplo: coordenadas <span class="notranslate">texture</span> - pode ser mapeado para qualquer atributo que você definir).</li>
    <li>Em geral, você deve usar <span class="inline">vertex_usage_textcoord</span> para todos os parâmetros extras sempre que possível, já que tipos como <span class="inline">vertex_usage_blendweight</span> e <span class="inline">vertex_usage_tangent</span> estão perto de serem depreciados na maioria dos idiomas <span class="notranslate">shader</span>, e provavelmente não se converterão corretamente. Em vez disso, use <span class="inline">vec</span>, <span class="inline">vec2</span>, <span class="inline">vec3</span> ou <span class="inline">vec4</span> tipos <span class="inline">vertex_usage_textcoord</span> e tudo deve funcionar bem.</li>
    <li>A GLSL ES <i>não</i> suporta atributos inteiros, portanto, a passagem em <span class="inline">ivec4</span>'s não funciona (este tipo é normalmente usado ao passar em <span class="inline">vertex_usage_blendindices</span>). O que você precisa fazer é passar nas coordenadas <span class="notranslate">texture</span> e depois no <span class="notranslate">shader</span>, convertê-las para <span class="inline">ivec4</span> desta forma:</li>
  </ul>
  <p> </p>
  <p class="code">attribute vec3 in_Position;<br />
    attribute vec4 in_BlendIndices;<br />
    attribute vec4 in_BlendWeights;<br />
    <br />
    varying vec4 v_vColour;<br />
    varying mat4 v_mat;<br />
    <br />
    void main()<br />
    {<br />
        gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * vec4( in_Position.xyz, 1.0);<br />
        v_vColour = in_BlendWeights;<br />
         ivec4 t = ivec4(in_BlendIndices);<br />
         v_mat = gm_Matrices[ t.x ];<br />
    }
  </p>
  <ul class="colour">
    <li>Os pesos de mistura são geralmente armazenados em uma matriz e depois acessados usando índices de mistura, mas você pode ver aqui que ao invés de definir <span class="inline">in_BlendIndices</span> como um atributo <span class="inline">ivec4</span>, é um <span class="inline">vec4</span>, então lançado para um <span class="inline">ivec4</span> no código. Isto é então usado para indexar o array criado usando o <span class="inline">gm_Matrix</span> (você só pode acessar um array usando um valor <span class="inline">INT</span> - não um float).</li>
    <br />
     
  </ul>
  <h4>Sintaxe:</h4>
  <p class="code">vertex_format_add_custom(type, usage);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Draw_Vertex_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Tipo de dados de vértices Constante</a></span></td>
        <td><span class="notranslate">The data type that this custom vertex data will hold (see the <b><i>type constants</i></b> listed above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">usage</span></td>
        <td><span data-keyref="Type_Constant_Draw_Vertex_Usage"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Constante do tipo de uso do vértice</a></span></td>
        <td><span class="notranslate">The use that the data will get(see the <b><i>usage constants</i></b> listed above).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_Void"><a data-rhwidget="HyperlinkPopover" href="../../../../../LINKGOESHERE">N/A</a></span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">vertex_format_begin();<br />
    vertex_format_add_textcoord();<br />
    vertex_format_add_custom(vertex_type_float3, vertex_usage_position);<br />
    my_format = vertex_format_end();</p>
  <p>O código acima criará um novo formato <span class="notranslate">vertex</span> com apenas <span class="notranslate">texture</span> e 3 valores de ponto flutuante personalizados para posição. É então armazenado o id do formato na variável &quot;my_format&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Primitives_And_Vertex_Formats.htm">Primitivos e <span class="notranslate">Vertex</span> Formatos</a></div>
        <div style="float:right">A seguir: <a href="vertex_format_end.htm"><span class="notranslate">vertex_format_end</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
vertex_format_add_custom
vertex_type_float1
vertex_type_float2
vertex_type_float3
vertex_type_float4
vertex_type_colour
vertex_type_ubyte4
vertex_usage_position
vertex_usage_colour
vertex_usage_normal
vertex_usage_textcoord
vertex_usage_blendweight
vertex_usage_blendindices
vertex_usage_depth
vertex_usage_tangent
vertex_usage_binormal
vertex_usage_fog
vertex_usage_sample
-->
  <!-- TAGS
vertex_format_add_custom
-->
</body>
</html>