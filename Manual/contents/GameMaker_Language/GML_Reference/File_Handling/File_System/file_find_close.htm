<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>file_find_close</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for file_find_close" />
  <meta name="rh-index-keywords" content="file_find_close" />
  <meta name="search-keywords" content="file_find_close" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>file_find_close</h1>
  <p>Esta função deve ser chamada após a manipulação de arquivos abertos usando <a href="file_find_first.htm"><span class="inline">file_find_first()</span></a> e <a href="file_find_next.htm"><span class="inline">file_find_next()</span></a> funções para liberar a memória. As funções de busca de arquivos abrem alças no diretório de arquivos e estas ocupam uma quantidade mínima de memória, o que (com o tempo) se soma. Portanto, você deve sempre chamar esta função depois de encontrar os arquivos necessários para &quot;fechar&quot; estas maçanetas.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">file_find_close();</p>
  <p> </p>
  <h4>Devoluções</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">if directory_exists(&quot;\User Content&quot;)<br />
    {<br />
        fileA = file_find_first(&quot;/User Content/*.doc&quot;, fa_readonly);<br />
        fileB = file_find_next();<br />
        fileC = file_find_next();<br />
        file_find_close();<br />
    }</p>
  <p>Este código verifica se o diretório especificado existe e, se existir, vai lá e retorna o primeiro arquivo &quot;somente leitura&quot; <span class="inline">.doc</span> encontrado. Em seguida, ele procura por mais dois arquivos e fecha o localizador de arquivos.</p>
  <p>Você pode procurar por qualquer número de arquivos usando um <a href="../../../GML_Overview/Language_Features/while.htm"><span class="notranslate">while</span></a> loop:</p>
  <p class="code">var files = [];<br />
    var file_name = file_find_first(&quot;/User Content/*.doc&quot;, fa_readonly);<br />
    <br />
    while (_file_name != &quot;&quot;)<br />
    {<br />
        array_push(_files, _file_name);<br />
    <br />
        _file_name = file_find_next();<br />
    }<br />
    <br />
    file_find_close();
  </p>
  <p>O código acima cria uma matriz vazia para armazenar todos os nomes de arquivos que foram encontrados, e começa a procurar somente os arquivos <span class="inline">.doc</span> lidos. Se esse nome de arquivo não for um <span class="notranslate">string</span> vazio, ele o empurra para a matriz <span class="inline">files</span>, e então tenta encontrar o próximo arquivo. O <span class="notranslate">loop</span> continuará repetindo até encontrar um <span class="notranslate">string</span> vazio (o que significa que não há mais arquivos correspondentes), que é quando termina o <span class="notranslate">loop</span> e fecha o localizador de arquivos no final.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="File_System.htm">Sistema de arquivo</a></div>
        <div style="float:right">A seguir: <a href="file_attributes.htm"><span class="notranslate">file_attributes</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
file_find_close
-->
  <!-- TAGS
file_find_close
-->
</body>
</html>