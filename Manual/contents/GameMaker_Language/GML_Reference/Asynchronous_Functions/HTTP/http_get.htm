<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get" />
  <meta name="rh-index-keywords" content="http_get" />
  <meta name="search-keywords" content="http_get" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get</h1>
  <p>Com esta função, você se conecta ao URL especificado a fim de recuperar informações. Como esta é uma função assíncrona, o <span data-keyref="GameMaker Name">GameMaker</span> não bloqueará enquanto espera por uma resposta, mas continuará funcionando a menos que receba informações de retorno de chamada. Estas informações estarão na forma de um <span class="notranslate">string</span> e desencadearão um <b>Evento Async</b> em qualquer instância que tenha um definido em suas propriedades <span class="notranslate">object</span>. Você também deve observar que os parâmetros de solicitação HTTP (os bits às vezes &quot;tacked on&quot; até o final de uma URL quando você envia um formulário em uma página web) são perfeitamente aceitáveis ao usar esta função, por exemplo:</p>
  <p class="code">http_get(&quot;http://www.example.com/logon?username=&quot;+name);</p>
  <p>passará o <span class="notranslate">string</span> mantido na variável &quot;name&quot; para o <span class="notranslate">server</span> bem como uma recuperação dos dados a partir dessa URL. Portanto, essencialmente, a qualquer momento, um simples e curto pedaço de dados precisa ser passado do cliente para o <span class="notranslate">server</span>, esta seria uma escolha razoável como função a ser usada.</p>
  <p class="note"><b>NOTA</b>: Você deve estar ciente de que, devido à proteção XSS nos navegadores, as solicitações e tentativas de carregamento de recursos através de domínios são bloqueadas e podem parecer retornar resultados em branco. Consulte a seção sobre <a href="HTTP.htm">Questões de domínios cruzados</a> para obter mais detalhes.</p>
  <p>Esta função irá gerar múltiplos &quot;call backs&quot; que são captados por qualquer <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">evento HTTP</a>. Estes irão gerar um <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> (mais comumente conhecido como &quot;dicionário&quot;) que é exclusivo para este evento e é armazenado na variável especial <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Este mapa DS conterá valores diferentes, dependendo se há dados sendo devolvidos ou não. Por exemplo, se você solicitou um arquivo, o evento será acionado várias vezes à medida que cada pacote de dados for recebido para que você possa mostrar uma barra de progresso, por exemplo. A estrutura geral para o mapa DS será a seguinte:</p>
  <ul class="colour">
    <li><b>id: </b>O ID que foi devolvido do comando. Se você disparar uma série de pedidos <span class="inline">http_</span> então você precisa saber qual deles você está recebendo a resposta, e assim você usaria este valor para comparar com o valor armazenado quando você originalmente enviou o pedido para encontrar o correto.</li>
    <li><b>status: </b>Retorna um valor inferior a 0 para um erro, 0 para completo e 1 para receber pacotes (veja abaixo para mais detalhes).</li>
    <li><b>resultado: </b>Os dados recebidos (<span class="notranslate">string</span> apenas).</li>
    <li><b>url: </b>A URL completa que você solicitou.</li>
    <li><b>http_status: </b>O código de status http em bruto (se disponível). Isto retorna o código de status padrão da web para a maioria dos navegadores, por exemplo: 304 para &quot;Não modificado&quot; ou 204 para &quot;Sem conteúdo&quot;, etc...</li>
  </ul>
  <p>Se houver vários pacotes sendo devolvidos ao seu jogo, a chave &quot;status&quot; de retorno retornará 1, neste caso o mapa DS terá as seguintes chaves adicionais:</p>
  <ul class="colour">
    <li><b>&quot;ContentLength&quot;: </b>Este é o tamanho do arquivo que a web <span class="notranslate">server</span> disse que você deve esperar receber (pode ser -1 se o <span class="notranslate">server</span> não devolver estes dados).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>O tamanho dos dados que já foram baixados.</li>
  </ul>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">http_get(url);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate">url</span></td>
        <td><span data-keyref="Type_String"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Cordão</a></span></td>
        <td><span class="notranslate">The web address of the server that you wish to get information from</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event"><a href="../../../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm" target="_blank">Async Request ID</a></span></p>
  <p> </p>
  <h4>Exemplo ampliado:</h4>
  <p>A função <span class="inline">http_get()</span> pode ser chamada a partir de qualquer evento, e como é assíncrona, a ligação de retorno pode ser quase instantânea ou pode levar vários segundos. Chamar a função é simples e pareceria algo parecido com isto:</p>
  <p class="code">get = http_get(&quot;http://www.MacSweeneyGames.com/logon?username=&quot; + name);</p>
  <p>O código acima passará o <span class="notranslate">string</span> mantido na variável &quot;name&quot; para o <span class="notranslate">server</span> dado, bem como recuperará os dados daquele URL, acionando um evento Async que conterá o mapa DS async_load (o índice do mapa async_load será armazenado na variável &quot;get&quot; para que você possa verificar se o retorno de chamada está correto). O Evento Async acionado seria o subevento <b>HTTP</b> e, nesse evento, você teria o seguinte:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == get<br />
    {<br />
        if ds_map_find_value(async_load, &quot;status&quot;) == 0<br />
        {<br />
            r_str = ds_map_find_value(async_load, &quot;result&quot;);<br />
        }<br />
        else<br />
        {<br />
            r_str = &quot;null&quot;;<br />
        }<br />
    }</p>
  <p>O código acima verificará primeiro a identificação do mapa DS que foi criado, depois verificará o &quot;status&quot; da ligação de retorno. Se o valor for igual a 0 (sinalização de sucesso), o resultado da chamada de retorno será então armazenado em uma variável para uso futuro, caso contrário a variável será definida como um valor padrão (neste caso, &quot;nulo&quot;).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">A seguir: <a href="http_get.htm"><span class="notranslate">http_get_file</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
http_get
-->
  <!-- TAGS
http_get
-->
</body>
</html>