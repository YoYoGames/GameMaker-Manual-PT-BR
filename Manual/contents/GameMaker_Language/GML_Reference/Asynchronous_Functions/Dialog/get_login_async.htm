<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>get_login_async</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for get_login_async" />
  <meta name="rh-index-keywords" content="get_login_async" />
  <meta name="search-keywords" content="get_login_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>get_login_async</h1>
  <p>Esta função abre uma janela que pede ao usuário para inserir um nome de usuário e uma senha. Estes argumentos podem ser definidos como um <span class="notranslate">string</span> vazio ou você pode armazenar valores previamente inseridos para usar, se desejar. Esta é uma função assíncrona, e como tal o <span data-keyref="GameMaker Name">GameMaker</span> <i>não</i> bloqueia o dispositivo em que está sendo executado enquanto espera por uma resposta, mas sim continua a executar eventos como de costume. Uma vez que o usuário tenha inserido os detalhes e pressionado o botão &quot;Ok&quot;, um evento assíncrono de <b>interação com o usuário</b> é acionado, o qual, <i>somente</i> para a duração desse evento, terá um mapa DS armazenado na variável <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>.</p>
  <p>Este mapa conterá as duas chaves, &quot;<strong>nome de usuário</strong>&quot; e &quot;<strong>senha</strong>&quot;, com a entrada do usuário correspondente armazenada em cada uma delas. Como é um Mapa DS que foi criado, este pode então ser usado, por exemplo, pelo <a href="../../File_Handling/Encoding_And_Hashing/json_encode.htm"><span class="inline">json_encode()</span></a> função pronta para ser enviada para um <span class="notranslate">server</span> ou escrita em um arquivo no dispositivo escolhido.</p>
  <p>Esta função retornará um número de índice para o evento assimétrico que foi acionado, que pode então ser verificado no evento correspondente para que você possa &quot;alvejar&quot; dados específicos caso você esteja esperando que mais de um evento assimétrico seja acionado (talvez de alguma outra função).</p>
  <p class="note"><strong><em><span class="note">NOTA</span></em></strong><em> Esta função é <span data-keyref="Dialog for debug only"> <strong>apenas</strong> para <strong>depuração e teste</strong></span>e não deve ser usada em jogos lançados. Para isso, você deve criar uma interface de usuário personalizada para receber informações dos jogadores, para que você tenha controle total sobre a aparência e o comportamento dos diálogos.</em></p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">get_login_async(name, password);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descrição</th>
     </tr>
      <tr>
        <td><span class="notranslate">username</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The default user name</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">password</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The default password</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Exemplo ampliado:</h4>
  <p>O <b>evento de criação</b> (por exemplo) do <span class="notranslate">object</span> que está controlando o login de nosso usuário teria o seguinte código:</p>
  <p class="code">ini_open(&quot;Profile.ini&quot;);<br />
    u = ini_read_string(&quot;User&quot;,&quot;0&quot;,&quot;&quot;);<br />
    p = ini_read_string(&quot;User&quot;,&quot;1&quot;,&quot;&quot;);<br />
    ini_close();<br />
    login = get_login_async(u,p);</p>
  <p>O código acima abre um arquivo ini (ou cria um se ele não existir) e recebe o nome e a senha armazenados nesse arquivo. Se eles não existirem, então o padrão de um arquivo vazio <span class="notranslate">string</span> (&quot;&quot;&quot;) é retornado. Estes valores são então utilizados em <span class="inline">get_login_async()</span> para pedir ao usuário seus dados de usuário e senha, com o índice de solicitação sendo armazenado na variável &quot;login&quot;. Note que enquanto se espera que o usuário forneça as informações necessárias, o jogo e seus eventos continuarão a funcionar normalmente.</p>
  <p>Agora que o código assíncrono foi disparado, precisamos verificar o valor de retorno no <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">evento assíncrono para Diálogos</a> da seguinte maneira:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == login<br />
    {<br />
        u = ds_map_find_value(async_load, &quot;username&quot;);<br />
        p = ds_map_find_value(async_load, &quot;password&quot;);<br />
    }</p>
  <p>O código acima verifica a chave &quot;id&quot; do mapa <span class="inline">async_load</span> DS e, se possuir o mesmo valor que o armazenado na variável &quot;login&quot;, os detalhes do mapa são então lidos nas variáveis correspondentes que você pode então armazenar ou usar para verificar os valores do banco de dados etc...</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Dialog.htm">Diálogo</a></div>
        <div style="float:right">A seguir: <a href="get_string_async.htm"><span class="notranslate">get_string_async</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
get_login_async
-->
  <!-- TAGS
get_login_async
-->
</body>
</html>