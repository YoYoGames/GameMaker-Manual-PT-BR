<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>shader_set_uniform_f</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function shader_set_uniform_f" />
  <meta name="rh-index-keywords" content="shader_set_uniform_f" />
  <meta name="search-keywords" content="shader_set_uniform_f" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>shader_set_uniform_f</h1>
  <p>Com esta função você pode definir o valor (ou valores) de uma constante <span class="notranslate">shader</span>. Você deve ter obtido previamente a &quot;manipulação&quot; da constante usando a função <a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a>e você terá que saber que tipo de constante é para passar o número correto de valores de ponto flutuante, ou seja: se você tiver um <span class="inline">vec2</span> você terá que passar dois valores para a função.</p>
  <p>Uma exceção à regra acima é quando se trata de valores de cor de 32bit. Você pode passar para o <span class="notranslate">shader</span> até oito valores de cor de 32 bits e eles serão automaticamente convertidos para você em valores vec4 de 0 - 1. Entretanto, para isso você <i>deve</i> usar o nome constante <span class="notranslate">shader</span> <span class="inline">in_Colour</span> , para uma única cor, ou <span class="inline">in_Colour0</span>, <span class="inline">in_Colour1</span>, etc... até <span class="inline">in_Colour7</span> para valores de entrada múltiplos. Os exemplos a seguir mostram como isto se pareceria no próprio <span class="notranslate">shader</span>:</p>
  <p class="code">    //Single colour<br />
        attribute vec2 in_Position;<br />
        attribute vec4 in_Colour;<br />
        attribute vec2 in_TextureCoord;<br />
    <br />
        //Multiple colours<br />
        attribute vec2 in_Position;<br />
        attribute vec4 in_Colour0;<br />
        attribute vec4 in_Colour1;<br />
        attribute vec2 in_TextureCoord;
  </p>
  <p>Observe também que, se você quiser fazer normais comprimidos etc... usando um formato de 4 bytes de cor, então você também terá que usar o mesmo formato &quot;in_Colour&quot; como mostrado acima.</p>
  <p class="note"><b></b><b>NOTA</b>: Todos os uniformes devem ser ajustados <b>após</b> a chamada da função <span style="font-size:1px;"><a href="shader_set.htm"><span class="inline">shader_set()</span></a></span>e antes de chamar <span style="font-size:1px;"><a href="shader_reset.htm"><span class="inline">shader_reset()</span></a></span>.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">shader_set_uniform_f(handle, value1 [, value2, value3, value4]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate">handle</span></td>
        <td><span data-keyref="Type_Handle_Shader_Uniform">Cabo Uniforme Shader</span></td>
        <td><span class="notranslate">The handle of the shader constant to set.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">value1 ... value4</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The floating point value (or values) to set the shader constant to.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">shader_set(shader_Glass);<br />
    shader_params = shader_get_uniform(shader_glass, &quot;u_vParams&quot;);<br />
    shader_set_uniform_f(shader_params, 0.1, 0.8, 0.25);<br />
    draw_self();<br />
    shader_reset();</p>
  <p>O código acima receberá o comando da constante <span class="notranslate">shader</span> &quot;u_vParams&quot; ( a <span class="inline">vec3</span>), e então definirá essa constante para os valores dados.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Shaders.htm">Shaders</a></div>
        <div style="float:right">A seguir: <a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader_set_uniform_f_array</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
shader_set_uniform_f
-->
  <!-- TAGS
shader_set_uniform_f
-->
</body>
</html>