<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Eventos Sequenciais, Momentos e Mensagens de Radiodifusão</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequence Events, Moments and Broadcast Messages" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Sequence Events,Sequence Momements,Sequence Messages,broadcast messages,event_create,event_destroy,event_clean_up,event_step,event_step_begin,event_step_end,event_async_system,event_broadcast_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Eventos, Momentos e Mensagens de Radiodifusão</h1>
  <p>Além de todas as propriedades listadas <a href="Sequences.htm">aqui</a> para um <span class="notranslate">sequence</span> <span class="notranslate">struct</span>, você também tem a possibilidade de adicionar em uma &quot;ação&quot; especial propriedades a um <span class="notranslate">sequence</span>. Há três tipos diferentes dessas propriedades de &quot;ação&quot; que podem ser adicionadas a um <span class="notranslate">sequence</span> <span class="notranslate">object</span> - <b>Eventos</b>. <b>Momentos</b> e <b>Mensagens de Radiodifusão</b> - e cada um deles é explicado com mais detalhes nas seções abaixo.</p>
  <h2>Eventos Sequenciais</h2>
  <p>Sequência <span class="notranslate">objects</span> pode ter <b>eventos</b> adicionados a eles, e estes eventos são análogos aos eventos utilizados por <span class="notranslate">object</span> <span class="notranslate">assets</span>. Os eventos atribuídos a um <span class="notranslate">sequence</span> <span class="notranslate">object</span> ocorrerão em uma ordem específica, seja uma vez em um momento definido no ciclo de vida <span class="notranslate">sequence</span>, ou a cada quadro que o <span class="notranslate">sequence</span> estiver rodando. Nesta seção, discutimos como estes eventos são tratados usando código, mas eles também podem ser adicionados usando o <a href="../../../../The_Asset_Editors/Sequences.htm">Editor de Sequência</a>. Note que a ordem dos eventos listados aqui não é influenciada pela direção do <a class="glossterm" data-glossterm="playhead" href="#">playhead</a>, e mesmo que o <span class="notranslate">sequence</span> esteja tocando ao contrário, os eventos continuarão a ser executados na ordem dada abaixo.</p>
  <p>Os eventos disponíveis são:<b></b></p>
  <ul class="colour">
    <li><b>Criar</b>: isto é acionado quando uma instância <span class="notranslate">sequence</span> é criada em uma camada.</li>
    <li><b>Destroy</b>: isto é acionado quando uma instância <span class="notranslate">sequence</span> em uma camada é destruída.</li>
    <li><b>Limpeza</b>: isto é acionado quando uma instância <span class="notranslate">sequence</span> é coletada de lixo.</li>
    <li><b>Etapa</b>: acionada um pouco antes do habitual evento da etapa <span class="notranslate">object</span>. <b>Importante!</b> Se o <span class="notranslate">sequence</span> for pausado, este evento não será acionado até o próximo passo após o <span class="notranslate">sequence</span> começar a tocar novamente.</li>
    <li><b>Passo Inicial</b>: acionado pouco antes do evento do passo inicial <span class="notranslate">object</span>. <b>Importante!</b> Se o <span class="notranslate">sequence</span> for pausado, este evento não será acionado até o próximo passo após o <span class="notranslate">sequence</span> começar a tocar novamente.</li>
    <li><b>Etapa final</b>: acionado pouco antes do evento da etapa final <span class="notranslate">object</span>. <b>Importante!</b> Se o <span class="notranslate">sequence</span> for pausado, este evento não será acionado até o próximo passo após o <span class="notranslate">sequence</span> começar a tocar novamente.</li>
    <li><b>Sistema Async</b>: acionou o mesmo que qualquer <span class="notranslate">object</span> <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">Asynchronous System Event</a> handlers. <em><b>Importante!</b> Se o <span class="notranslate">sequence</span> for pausado, então este evento não será acionado.</em></li>
    <li><b>Mensagem de transmissão</b>: acionada durante a atualização <span class="notranslate">sequence</span> como uma mensagem de transmissão <span class="notranslate">keyframe</span> é encontrada.</li>
  </ul>
  <p>Todos os eventos precisam estar associados a funções que são definidas em um <span class="notranslate">script</span>, portanto, para configurar um evento, uma <a href="../../../GML_Overview/Method_Variables.htm">variável de método</a> deve ser atribuída a um imóvel com o nome correto que diga ao <span class="notranslate">sequence</span> qual evento deve chamar a função. A sintaxe para isto é a seguinte:</p>
  <p class="code">&lt;sequence_struct&gt;.&lt;event_property&gt; = method(&lt;sequence_struct&gt;, &lt;function_name&gt;);</p>
  <p>As propriedades <span class="notranslate">sequence</span> <span class="notranslate">struct</span> para os diferentes eventos são as seguintes:<span class="inline"></span></p>
  <ul class="colour">
    <li><span class="inline">event_create</span><span class="inline"></span></li>
    <li><span class="inline">event_destroy</span><span class="inline"></span></li>
    <li><span class="inline">event_clean_up</span><span class="inline"></span></li>
    <li><span class="inline">event_step</span><span class="inline"></span></li>
    <li><span class="inline">event_step_begin</span><span class="inline"></span></li>
    <li><span class="inline">event_step_end</span></li>
    <li><span class="inline">event_async_system</span><span class="inline"></span></li>
    <li><span class="inline">event_broadcast_message</span></li>
  </ul>
  <p>Para dar um exemplo de uso, digamos que queremos que o <span class="notranslate">sequence</span> inverta a direção quando um clique esquerdo do mouse for detectado. Primeiro precisaríamos criar um <span class="notranslate">script</span> com a função que queremos chamar, algo como isto:</p>
  <p class="code">/// @function seq_reverse();<br />
    <br />
    function seq_reverse()<br />
    {<br />
        if (mouse_check_button_pressed(mb_left))<br />
        {<br />
            if (self.headDirection == seqdir_right)<br />
            {<br />
                self.headDirection = seqdir_left;<br />
            }<br />
            else self.headDirection = seqdir_right;<br />
        }<br />
    }
  </p>
  <p>Nesta função, tudo o que estamos fazendo é ouvir um clique do mouse e depois inverter a direção de reprodução do <span class="notranslate">sequence</span> ao qual o método foi vinculado. Você vai notar que atualmente não é possível passar nenhum parâmetro para as funções que estão ligadas a estas propriedades, e em todos os casos o <a href="../../../GML_Overview/Instance_Keywords.htm"><span class="inline">self</span></a> dentro do escopo da função é atribuída para ser a instância <span class="notranslate">sequence</span>.</p>
  <p class="note"><b>OBSERVAÇÃO</b>: Vale notar que no exemplo acima <span class="notranslate">script</span> o identificador <span class="inline">self</span> pode ser omitido e só é usado para mostrar explicitamente o escopo da variável do método que está sendo usado para este exemplo.</p>
  <p>Para atribuir isto a um <span class="notranslate">sequence</span> você então faria algo assim:</p>
  <p class="code">var _seq = sequence_get(Sequence1);<br />
    _seq.event_step = method(_seq, seq_reverse);</p>
  <p>Atribuímos agora um evento de etapa ao <i>objeto</i> <span class="notranslate">sequence</span> com uma função para detectar quando um mouse é pressionado e então mudar a direção do playhead da <i>instância</i> <span class="notranslate">sequence</span> após ter sido criada em um <span class="notranslate">room</span>.</p>
  <h2><label for="2">Momentos</label></h2>
  <p>Um <b>momento</b> <span class="notranslate">sequence</span> é uma ação de código única que é disparada em um ou mais quadros especificados, conforme joga o <span class="notranslate">sequence</span>. Estes momentos de código são - como nos eventos (explicados acima) - simplesmente <a href="../../../GML_Overview/Method_Variables.htm">variáveis de método</a> pré-definidas que são acionadas no frame dado. Por exemplo, digamos que você queira um <span class="notranslate">sequence</span> para criar uma instância &quot;bala&quot; em um frame específico da animação - primeiro você precisaria criar a função que deve ser usada para esta ação, algo como isto:</p>
  <p class="code">/// @function seq_shoot();<br />
    <br />
    seq_shoot = function()<br />
    {<br />
        instance_create_layer(sequence.xorigin, sequence.yorigin, &quot;Instances&quot;, obj_Bullet);<br />
    }
  </p>
  <p>Você então adicionaria isto a um quadro no <span class="inline">momentKeyframes</span> propriedade do <span class="notranslate">sequence</span> <span class="notranslate">struct</span>. Esta é essencialmente uma faixa &quot;especial&quot; que só é usada para este fim e, portanto, só pode levar <span class="notranslate">keyframe</span> dados que estão associados a ações de momento que você deseja que o <span class="notranslate">sequence</span> tenha. Esta faixa é criada da mesma forma que você criaria qualquer outra faixa, criando <span class="notranslate">keyframe</span> <span class="notranslate">structs</span> e preenchendo-as com dados <span class="notranslate">keyframe</span>, onde o canal 0 é o único canal que você pode usar e o tipo de faixa é <span class="inline">seqtracktype_moment</span>. Abaixo está um exemplo de como isto seria criado, usando a função que definimos acima para disparar nos momentos dados (quadros):</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(3);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[1].frame = 120;<br />
    _k[2] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[2].frame = 180;<br />
    var _d = array_create(1);<br />
    _d[0] = sequence_keyframedata_new(seqtracktype_moment);<br />
    _d[0].channel = 0;<br />
    _d[0].event = method(_d[0], seq_shoot);<br />
    _k[0].channels = _d;<br />
    _k[1].channels = _d;<br />
    _k[2].channels = _d;<br />
    _seq.momentKeyframes = _k;</p>
  <p>O código acima simplesmente definirá os quadros 60, 120 e 180 da faixa do &quot;momento&quot; para chamar o método <span class="inline">seq_shoot</span>. Você notará que atualmente não é possível passar nenhum parâmetro para as funções que são usadas para cada momento, e em todos os casos a variável <span class="inline">self</span> dentro do escopo da função é atribuída para ser a instância <span class="notranslate">sequence</span> (geralmente você não precisa usar <span class="inline">self</span>, mas em alguns casos especiais pode ser útil).</p>
  <h2><label for="3">Mensagens de radiodifusão</label></h2>
  <p>Seqüências podem ser feitas para gerar <b>mensagens transmitidas</b>, que simples <span class="notranslate">strings</span> são adicionadas a quadros específicos ao longo da animação <span class="notranslate">timeline</span>, e quando esse ponto no <span class="notranslate">timeline</span> for alcançado, então o <span class="notranslate">string</span> será transmitido para todas as instâncias <span class="notranslate">object</span> que o escutarem. Você pode adicionar estas mensagens no <span class="notranslate">IDE</span> usando o <a href="../../../../The_Asset_Editors/Sequences.htm">editor Sequence</a>, mas elas também podem ser criadas e editadas usando código.</p>
  <p>Para criar uma mensagem broadcast em um <span class="notranslate">sequence</span> usando <span class="notranslate">GML</span>, você precisa adicioná-las a um frame na propriedade <span class="inline">messageEventKeyframes</span> do <span class="notranslate">sequence</span> <span class="notranslate">struct</span>. Esta é essencialmente uma faixa &quot;especial&quot; que só é usada para este fim e, portanto, só pode levar os dados de <span class="notranslate">keyframe</span> que estão associados às mensagens de difusão que você deseja que o <span class="notranslate">sequence</span> tenha. Esta faixa é criada da mesma forma que você criaria qualquer outra faixa, criando <span class="notranslate">keyframe</span> <span class="notranslate">structs</span> e preenchendo-as com dados <span class="notranslate">keyframe</span>, onde o canal 0 é o único canal que você pode usar e o tipo de faixa é <span class="inline">seqtracktype_message</span>. Abaixo está um exemplo de como isto seria criado:</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(2);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[1].frame = 120;<br />
    var _m1 = array_create(2);<br />
    _m1[0] = &quot;Hello&quot;;<br />
    _m1[1] = &quot;World&quot;;<br />
    var _m2 = array_create(1);<br />
    _m2[0] = &quot;This is a Broadcast Message&quot;;<br />
    var _d1 = array_create(1);<br />
    _d1[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d1[0].channel = 0;<br />
    _d1[0].events = _m1;<br />
    var _d2 = array_create(1);<br />
    _d2[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d2[0].channel = 0;<br />
    _d2[0].events = _m2;<br />
    _k[0].channels = _d1;<br />
    _k[1].channels = _d2;<br />
    _seq.messageEventKeyframes = _k;</p>
  <p>Você notará que o texto da mensagem é passado para o canal de dados <span class="notranslate">keyframe</span> como uma matriz. Isto porque você pode transmitir várias mensagens no mesmo quadro, e ter diferentes instâncias <span class="notranslate">object</span> ouvindo-as e reagindo diferentemente dependendo da mensagem que estão realmente esperando.</p>
  <p>Uma vez emitida uma mensagem de transmissão pelo <span class="notranslate">sequence</span>, você pode analisá-la usando o evento <i>Other</i> &gt; <i>Broadcast Message</i> em <span class="notranslate">object</span> instâncias, que é explicado em detalhes <a href="../../../../The_Asset_Editors/Sequence_Properties/Broadcast_Messages.htm">aqui</a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Sequences.htm">Sequências</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Sequence Events
Sequence Moments
Sequence Broadcast Messages
broadcast Messages
event_create
event_destroy
event_clean_up
event_step
event_step_begin
event_step_end
event_async_system
event_broadcast_message
-->
  <!-- TAGS
sequence_events_moments_broadcasts
-->
</body>
</html>