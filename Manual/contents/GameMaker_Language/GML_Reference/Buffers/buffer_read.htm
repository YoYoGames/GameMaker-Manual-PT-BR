<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_read</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_read" />
  <meta name="rh-index-keywords" content="buffer_read,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_read,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_read</h1>
  <p>Esta função pode ser usada para ler dados de um <span class="notranslate">buffer</span> previamente criado. O valor de retorno dependerá do tipo de dados que você estiver lendo, o que em si mesmo é definido pelas seguintes constantes:</p>
  <table>
    <tbody>
      <tr>
        <th>Constante</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u8</span></td>
        <td>Um número inteiro não assinado de 8 bits. Este é um valor positivo de 0 a 255.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s8</span></td>
        <td>Um número inteiro de 8 bits assinado. Este pode ser um valor positivo ou negativo de -128 a 127 (0 é classificado como positivo).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u16</span></td>
        <td>Um inteiro de 16 bits, não assinado. Este é um valor positivo de 0 - 65,535.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s16</span></td>
        <td>Um número inteiro de 16 bits assinado. Este pode ser um valor positivo ou negativo de -32.768 a 32.767 (0 é classificado como positivo).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u32</span></td>
        <td>Um número inteiro não assinado de 32 bits. Este é um valor positivo de 0 a 4.294.967.295.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s32</span></td>
        <td>Um número inteiro de 32 bits assinado. Este pode ser um valor positivo ou negativo de -2.147.483.648 a 2.147.483.647 (0 é classificado como positivo).</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u64</span></td>
        <td>Um número inteiro não assinado de 64 bits.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f16</span></td>
        <td>Um flutuador de 16 bits. Este pode ser um valor positivo ou negativo dentro da faixa de +/- 65504. <i>(Não suportado atualmente!)</i></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f32</span></td>
        <td>Um flutuador de 32bit. Este pode ser um valor positivo ou negativo dentro da faixa de +/-16777216.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f64</span></td>
        <td>Um flutuador de 64 bits.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_bool</span></td>
        <td>Um valor booleano. Pode ser apenas 1 ou 0 (<span class="inline">true</span> ou <span class="inline">false</span>)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_string</span></td>
        <td>A <span class="notranslate">string</span> de qualquer tamanho.</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_text</span></td>
        <td>A <span class="notranslate">string</span> de qualquer tamanho, sem o caráter final de terminação nula.</td>
      </tr>
    </tbody>
  </table>
  <p>Se a função for bem sucedida, ela retornará um valor do tipo dado, porém, se falhar, causará um erro de corredor.</p>
  <p class="note"><span class="note">O</span> uso do tipo de dado incorreto para os dados que estão sendo lidos resultará em valores errôneos que serão devolvidos.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">buffer_read(buffer, type)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">Identificação do tampão</a></span></td>
        <td><span class="notranslate">The index of the buffer to read from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Buffer_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_write.htm">Constante do tipo de dados tampão</a></span></td>
        <td><span class="notranslate">The type of data that is to be read from the buffer (see the list of constants above).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span>, <span data-keyref="Type_Bool"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Boolean</a></span> or <span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">String</a></span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">var cmd = buffer_read(buff, buffer_s16);</p>
  <p>O código acima lê do <span class="notranslate">buffer</span> com o id armazenado na variável &quot;buff&quot; um valor de 16 bits assinado na variável local &quot;cmd&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Buffers.htm">Tampões</a></div>
        <div style="float:right">A seguir: <a href="buffer_write.htm"><span class="notranslate">buffer_write</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
buffer_read
buffer_u8
buffer_s8
buffer_u16
buffer_s16
buffer_u32
buffer_s32
buffer_u64
buffer_f16
buffer_f32
buffer_f64
buffer_bool
buffer_string
buffer_text
-->
  <!-- TAGS
buffer_read
-->
</body>
</html>