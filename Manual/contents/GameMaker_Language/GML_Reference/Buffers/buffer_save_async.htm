<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_save_async</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_save_async" />
  <meta name="rh-index-keywords" content="buffer_save_async" />
  <meta name="search-keywords" content="buffer_save_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_save_async</h1>
  <p>Com esta função você pode salvar parte do conteúdo de um <span class="notranslate">buffer</span> em um arquivo, pronto para ser lido de volta à memória usando o <a href="buffer_load.htm"><span class="inline">buffer_load()</span></a> função (ou qualquer uma das outras funções de carregamento <span class="notranslate">buffers</span>). O &quot;offset&quot; define a posição inicial dentro do <span class="notranslate">buffer</span> para economia (em bytes), e o &quot;tamanho&quot; é o tamanho da área <span class="notranslate">buffer</span> a ser salva a partir desse offset (também em bytes). Esta função funciona de forma assíncrona, e assim o jogo continuará funcionando enquanto estiver sendo salvo, e todos os arquivos salvos usando esta função serão colocados em uma pasta &quot;padrão&quot;. Esta pasta <i>não</i> precisa ser incluída no nome do arquivo, pois ele é adicionado automaticamente por <span class="notranslate">GameMaker</span>. Por exemplo, o nome do arquivo <span class="notranslate">path</span> &quot;<span class="inline">Data\Player_Save.sav</span>&quot; seria na verdade salvo em &quot;<span class="inline">default\Data\Player_Save.sav</span>&quot;. Entretanto, se você então carregar o arquivo usando a função <a href="buffer_load_async.htm"><span class="inline">buffer_load_async()</span></a>Você também não precisa fornecer a parte &quot;padrão&quot; do <span class="notranslate">path</span> (mas qualquer outra função de arquivo o exigirá, exceto nos consoles Xbox One, PS4 e <span class="notranslate">Nintendo</span> <span class="notranslate">Switch</span>).</p>
  <p class="note"><b>NOTA</b>: Em HTML5 &quot;default/&quot; não é adicionado automaticamente e você pode ter que responder por isso em seu código.</p>
  <p>A função retornará um valor de ID exclusivo e acionará um <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Save_Load.htm">Evento Assíncrono de Salvamento/Carga</a> onde você pode usar o ID retornado para verificar o valor de ID <span class="inline">async_load</span>, como mostrado no exemplo ampliado abaixo. O  é o valor de ID. <a href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a> no evento terá os dois pares chave/valor a seguir:</p>
  <ul>
    <li><b>&quot;id&quot;: </b>a identificação da função async como retornada pela função save.</li>
    <li><b>&quot;status&quot;: </b>retornará <span class="inline">true</span> se os dados foram salvos/carregados corretamente, e <span class="inline">false</span> caso contrário.</li>
  </ul>
  <p>Note que você pode salvar múltiplos <span class="notranslate">buffers</span> em um, chamando esta função várias vezes entre chamadas para <a href="buffer_async_group_begin.htm"><span class="inline">buffer_async_group_begin()</span></a> e <a href="buffer_async_group_end.htm"><span class="inline">buffer_async_group_end()</span></a> (veja essas funções para maiores informações sobre isso).</p>
  <p class="note"><b>NOTA</b>: Em HTML5, os resultados retornados são salvos como base64 codificada <span class="notranslate">strings</span> quando salvos em um arquivo.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">buffer_save_async(buffer, filename, offset, size);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descrição</th>
     </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td><td><span data-keyref="Type_ID_Buffer"></span></td>
        <td><span class="notranslate">The index of the buffer to save.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">filename</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The name of the file to save as.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">offset</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The offset within the buffer to save from (in bytes).</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">size</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The size of the buffer area to save (in bytes).</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Exemplo ampliado:</h4>
  <p>A função <span class="inline">buffer_save_async()</span> pode ser chamada a partir de qualquer evento, e como é assíncrona, a ligação de retorno pode ser quase instantânea ou pode levar vários segundos. Chamar a função é simples e pareceria algo parecido com isto:</p>
  <p class="code">saveid = buffer_save_async(buff, &quot;Player_Save.sav&quot;, 0, 16384);</p>
  <p>O código acima salva o conteúdo do arquivo &quot;<i>buff&quot;</i> <span class="notranslate">buffer</span>, armazenando o ID da chamada de função na variável &quot;<i>saveid</i>&quot;. Quando o salvamento estiver completo, o evento assíncrono de salvamento/carga será acionado e você poderá analisar o mapa <span class="inline">async_load</span> para a identificação correta da função, desta forma:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == saveid<br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;) == false)<br />
        {<br />
            show_debug_message(&quot;Save failed!&quot;);<br />
        }<br />
    }</p>
  <p>O código acima verificará primeiro a identificação do mapa DS que foi criado, depois verificará o status da chamada de retorno, postando uma mensagem de depuração se tiver havido algum problema.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Buffers.htm">Tampões</a></div>
        <div style="float:right">A seguir: <a href="buffer_load.htm"><span class="notranslate">buffer_load</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
buffer_save_async
-->
  <!-- TAGS
buffer_save_async
-->
</body>
</html>