<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>retornar</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the return function" />
  <meta name="rh-index-keywords" content="return" />
  <meta name="search-keywords" content="return" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>retornar</h1>
  <p>A declaração <span class="inline">return</span> tem a seguinte sintaxe:</p>
  <p class="code">return (&lt;expression&gt;)</p>
  <p>Você só usa a declaração <span class="inline">return</span> em<span> <a href="../Script_Functions.htm">funções</a> e <a href="../Method_Variables.htm">métodos de</a> <a href="../Script_Functions.htm">script</a></span>, e ela é usada para retornar um valor da função a ser usada em outras chamadas de código ou função. Deve-se observar que a <i>execução da função termina na declaração <span class="inline">return</span> </i>, o que significa que qualquer código que venha depois de <span class="inline">return</span> ter sido chamado não será executado. Aqui está um pequeno exemplo <span class="notranslate">script</span> chamado <span class="inline">sqr_calc</span> que calcula o quadrado do valor que lhe for passado, e inclui a captura de erros caso o parâmetro que lhe for passado não seja um número real:</p>
  <p class="code">/// @function            sqr_calc(val);<br />
    /// @param {real}  val   The value to calculate the square of<br />
    /// @description         Calculate the square of the given value<br />
    <br />
    function sqr_calc(value)<br />
    {<br />
        if (!is_real(value))<br />
        {<br />
            return 0;<br />
        }<br />
        else<br />
        {<br />
            return (value * value);<br />
        }<br />
    }
  </p>
  <p>Para chamar uma função de dentro de um código, basta utilizá-la da mesma forma que ao chamar funções <span class="notranslate">runtime</span> - ou seja, escrever o nome da função com os valores dos parâmetros entre parênteses. Assim, a função acima seria chamada desta forma:</p>
  <p class="code">if keyboard_check_pressed(vk_enter)<br />
    {<br />
        val = scr_sqr(amount);<br />
    }</p>
  <p>Aqui a variável <span class="inline">val</span> será 0 (porque a variável <span class="inline">amount</span> não é um número real) ou o total para <span class="inline">value * value</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">A seguir: <a href="begin_end.htm"><span class="notranslate">begin / end</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
return
-->
  <!-- TAGS
return
-->
</body>
</html>