<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>excluir</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the delete function" />
  <meta name="rh-index-keywords" content="delete" />
  <meta name="search-keywords" content="delete" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>excluir</h1>
  <p>O operador <span class="inline">delete</span> é usado para <strong>desreferenciar</strong> uma <a href="../Structs.htm">estrutura</a>, e tem a seguinte sintaxe:</p>
  <p class="code">delete &lt;variable&gt;;</p>
  <p>Isto significa que você chama o operador de exclusão junto com a variável que contém um <span class="notranslate">struct</span> e removerá a <em>referência </em>específica ao <span class="notranslate">struct</span> armazenado na variável em questão (uma referência é simplesmente um valor que aponta para a área de memória
    que está armazenando o <span class="notranslate">struct</span> e seu conteúdo). Se esta referência foi a última referência ao <span class="notranslate">struct</span> em seu jogo, então o <a class="glossterm" data-glossterm="catador de lixo" href="#">catador de lixo</a> removerá o <span class="notranslate">struct</span> da memória em
    uma <a class="glossterm" data-glossterm="iteração" href="#">iteração</a> seguinte, normalmente logo no início da próxima etapa.</p>
  <p class="note"><strong>NOTA</strong>: <span class="inline">delete</span> só pode ser usado junto com variáveis, e <i>não</i> com expressões</p>
  <p>Por padrão, <span class="notranslate">structs</span>, sem mais referências em código, será coletado automaticamente o lixo nas etapas seguintes ao seu uso, mas é uma boa prática usar este operador para <span class="notranslate">flag</span> explicitamente para que o coletor de lixo remova da memória em
    o início da etapa seguinte, liberando a memória de forma rápida e mais eficiente.</p>
  <p>O exemplo a seguir mostra um <span class="notranslate">struct</span> sendo criado - por exemplo, no Create Event of an instance:</p>
  <p class="code">mystruct =<br/> {
    <br/>     a : 0,<br/>     b : 100,<br/>     c : &quot;Hello World&quot;<br/> }
  </p>
  <p>Este <span class="notranslate">struct</span> será então utilizado nos eventos de instância como de costume, antes de finalmente ser sinalizado para a coleta de lixo no evento <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm">Clean Up</a>, como este:</p>
  <p class="code">delete mystruct;</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">A seguir: <a href="If_Else_and_Conditional_Operators.htm">se/outros E Operadores Condicionais</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
delete
-->
  <!-- TAGS
delete
-->
</body>
</html>